SCCTEXT Version 4.0.0.2
PLATFORM C(8,0),UNIQUEID C(10,0),TIMESTAMP N(10,0),CLASS M(4,0),CLASSLOC M(4,0),BASECLASS M(4,0),OBJNAME M(4,0),PARENT M(4,0),PROPERTIES M(4,0),PROTECTED M(4,0),METHODS M(4,0),OBJCODE M(4,0),OLE M(4,0),OLE2 M(4,0),RESERVED1 M(4,0),RESERVED2 M(4,0),RESERVED3 M(4,0),RESERVED4 M(4,0),RESERVED5 M(4,0),RESERVED6 M(4,0),RESERVED7 M(4,0),RESERVED8 M(4,0),USER M(4,0)
1252

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] Class     
[START RESERVED1]
VERSION =   3.00[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _33A0BX6P9
[CLASS] custom
[BASECLASS] custom
[OBJNAME] contextmenu
[START PROPERTIES]
Name = "contextmenu"
_memberdata =     1005<VFPData><memberdata name="ncurrentlevel" display="nCurrentLevel"/><memberdata name="abarcounts" display="aBarCounts"/><memberdata name="amenunames" display="aMenuNames"/><memberdata name="aallmenunames" display="aAllMenuNames"/><memberdata name="achoices" display="aChoices"/><memberdata name="nchoices" display="nChoices"/><memberdata name="activate" display="Activate"/><memberdata name="nchoice" display="nChoice"/><memberdata name="keyword" display="Keyword"/><memberdata name="parameters" display="Parameters"/><memberdata name="createcontextmenu" display="CreateContextMenu"/><memberdata name="calculateshortcutmenuposition" display="CalculateShortcutMenuPosition"/><memberdata name="pix2fox" display="Pix2Fox"/><memberdata name="addmenuitem" display="AddMenuItem"/><memberdata name="addsubmenu" display="AddSubMenu"/><memberdata name="endsubmenu" display="EndSubMenu"/><memberdata name="addmenuitemx" display="AddMenuItemX"/><memberdata name="addmenuitemexec" display="AddMenuItemExec"/></VFPData>
keyword = .F.
nchoice = 0
nchoices = 0
ncurrentlevel = 1
parameters = .F.
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
Lparameters lcMenuName

With This
	.aBarCounts(1) 	  = 0

	If Empty (lcMenuName)
		lcMenuName = 'Menu' + Sys(2015)
		.CreateContextMenu (lcMenuName)
	Endif

	.aMenuNames(1) 	  = lcMenuName
	.aAllMenuNames(1) = lcMenuName

Endwith


ENDPROC
PROCEDURE activate
Local lcMenu, lnChoice, lnI
lnChoice = 0

lcMenu = This.aMenuNames(1)
Activate Popup &lcMenu

For lnI = 1 To Alen (This.aAllMenuNames)
	lcMenu = This.aAllMenuNames (lnI)
	Release Popups &lcMenu
Endfor

If lnChoice > 0
	This.nChoice	= lnChoice
	This.Keyword	= This.aChoices (lnChoice, 1)
	This.Parameters	= This.aChoices (lnChoice, 2)
	Return .T.
Else
	Return .F.
Endif

ENDPROC
PROCEDURE addmenuitem
Lparameters lcPrompt, lcKeyWord, lxParameters, lcSkipFor, lcKey, lcExec, llMarked

Local lcMenuName, lcSkip, lnBar, lnCurrentLevel

With This
	lnCurrentLevel = .nCurrentLevel
	lnBar		   = .aBarCounts (lnCurrentLevel) + 1
	lcMenuName	   = .aMenuNames (lnCurrentLevel)
	lcSkip		   = Iif (Empty(lcSkipFor), '', 'Skip for ' + Transform(lcSkipFor))

	.aBarCounts (lnCurrentLevel) = lnBar

	.nChoices = .nChoices + 1
	Dimension .aChoices (.nChoices, 2)
	.aChoices (.nChoices, 1) = lcKeyWord
	.aChoices (.nChoices, 2) = lxParameters
	If Empty(lcExec)
		lcExec = 'lnChoice = ' + Transform (.nChoices)
	Endif

Endwith

lcPrompt = Evl(lcPrompt, '\-')
If Empty (lcKey)
	Define Bar (lnBar) Of (lcMenuName) Prompt lcPrompt &lcSkip
Else
	lcKey = Chrtran (lcKey, ' ', '')
	Try
		Define Bar (lnBar) Of (lcMenuName) Prompt lcPrompt &lcSkip Key &lcKey
	Catch
		Define Bar (lnBar) Of (lcMenuName) Prompt lcPrompt &lcSkip
	Endtry
Endif

On Selection Bar (lnBar) Of (lcMenuName) &lcExec
Set Mark Of Bar (lnBar) Of (lcMenuName) To llMarked

ENDPROC
PROCEDURE addmenuitemexec
Lparameters lcPrompt, lcExec, lcSkipFor, lcKey

This.AddMenuItem(lcPrompt, '', '', lcSkipFor, lcKey, lcExec)

ENDPROC
PROCEDURE addsubmenu
Lparameters lcPrompt, lcSkipFor
Local lcMenuName, lcPopupName, lcSkip, lnBar, lnCurrentLevel

With This
	lnCurrentLevel = .nCurrentLevel

	lcPopupName = 'Menu' + Sys(2015)
	Define Popup &lcPopupName SHORTCUT Relative

	lnBar		   = .aBarCounts (lnCurrentLevel) + 1
	lcMenuName	   = .aMenuNames (lnCurrentLevel)
	.aBarCounts (lnCurrentLevel) = lnBar

	lcSkip		   = IIf (Empty(lcSkipFor), '', 'Skip for ' + Transform(lcSkipFor))	
	Define Bar (lnBar) Of (lcMenuName) Prompt lcPrompt &lcSkip
	On Bar (lnBar) Of (lcMenuName) Activate Popup &lcPopupName

	****************************************************************

	lnCurrentLevel = lnCurrentLevel + 1
	.nCurrentLevel = lnCurrentLevel

	Dimension .aBarCounts(lnCurrentLevel)
	.aBarCounts(lnCurrentLevel) = 0

	Dimension .aMenuNames(lnCurrentLevel)
	.aMenuNames(lnCurrentLevel) = lcPopupName

	Dimension .aAllMenuNames(1 + ALen(.aAllMenuNames))
	.aAllMenuNames(ALen(.aAllMenuNames)) = lcMenuName

Endwith

ENDPROC
PROCEDURE calculateshortcutmenuposition
Local lcPoint, lnSMCol, lnSMRow, loResult, loWas

loWas = Newobject ('WinApiSupport', 'PEME_WinApiSupport.PRG')
Declare Long GetCursorPos In WIN32API String @lpPoint
Declare Long ScreenToClient In WIN32API Long HWnd, String @lpPoint

lcPoint = Replicate (Chr(0), 8)
&& Get mouse location in Windows desktop coordinates (pixels)
= GetCursorPos (@lcPoint)
&& Convert to VFP Desktop (_Screen) coordinates
= ScreenToClient (_Screen.HWnd, @lcPoint)
&& Covert the coordinates to foxels

lnSMCol	= This.Pix2Fox (loWas.Long2Num (Left (lcPoint, 4)), .F., _Screen.FontName, _Screen.FontSize)
lnSMRow	= This.Pix2Fox (loWas.Long2Num (Right (lcPoint, 4)), .T., _Screen.FontName, _Screen.FontSize)

loResult = Createobject ('Empty')
AddProperty (loResult, 'Column', lnSMCol )
AddProperty (loResult, 'Row', lnSMRow )
Return loResult

ENDPROC
PROCEDURE createcontextmenu
Lparameters lcMenuName
Local loPosition

loPosition = This.CalculateShortcutMenuPosition()

*** JRN 2010-11-10 : Following is an attempt to solve the problem
* when there is another form already open; apparently, if the 
* focus is on the screen, the positioning of the popup still works OK
_Screen.Show()

Define Popup (lcMenuName)						;
	shortcut									;
	Relative									;
	From loPosition.Row, loPosition.Column

ENDPROC
PROCEDURE endsubmenu
Lparameters lcPrompt
Local lnBarCount, lcMenuName, lnCurrentLevel

With This
	lnCurrentLevel = .nCurrentLevel
	lnBarCount	   = .aBarCounts(lnCurrentLevel)
	If lnCurrentLevel > 1

		lnCurrentLevel = lnCurrentLevel - 1
		.nCurrentLevel = lnCurrentLevel

		Dimension .aBarCounts(lnCurrentLevel)
		Dimension .aMenuNames(lnCurrentLevel)

		If lnBarCount = 0
			lcMenuName = .aMenuNames (lnCurrentLevel)
			Release Bar (.aBarCounts(lnCurrentLevel)) Of &lcMenuName
			.aBarCounts(lnCurrentLevel) = .aBarCounts(lnCurrentLevel) - 1
		Endif
	Endif

Endwith

ENDPROC
PROCEDURE pix2fox
LPARAMETER tnPixels, tlVertical, tcFontName, tnFontSize
&& tnPixels - pixels to convert
&& tlVertical - .F./.T. convert horizontal/vertical coordinates
&& tcFontName, tnFontSize - use specified font/size 
&&         or current form (active output window) font/size, if not specified 
LOCAL lnFoxels
 
IF PCOUNT() > 2
	lnFoxels = tnPixels/FONTMETRIC(IIF(tlVertical, 1, 6), tcFontName, tnFontSize)
ELSE
	lnFoxels = tnPixels/FONTMETRIC(IIF(tlVertical, 1, 6))
ENDIF	
 
RETURN lnFoxels
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
*activate Occurs when a FormSet, Form, or Page object becomes active or when a ToolBar object is shown.
*addmenuitem Adds a new item to a ComboBox or ListBox control, optionally allowing you to specify the item's index.
*addmenuitemexec 
*addsubmenu 
*calculateshortcutmenuposition 
*createcontextmenu 
*endsubmenu 
*pix2fox 
^aallmenunames[1,0] 
^abarcounts[1,0] 
^achoices[1,0] 
^amenunames[1,0] 
_memberdata XML Metadata for customizable properties
keyword
nchoice
nchoices
ncurrentlevel
parameters
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] contextmenu
[EOF]
