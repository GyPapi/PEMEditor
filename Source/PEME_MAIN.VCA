SCCTEXT Version 4.0.0.2
PLATFORM C(8,0),UNIQUEID C(10,0),TIMESTAMP N(10,0),CLASS M(4,0),CLASSLOC M(4,0),BASECLASS M(4,0),OBJNAME M(4,0),PARENT M(4,0),PROPERTIES M(4,0),PROTECTED M(4,0),METHODS M(4,0),OBJCODE M(4,0),OLE M(4,0),OLE2 M(4,0),RESERVED1 M(4,0),RESERVED2 M(4,0),RESERVED3 M(4,0),RESERVED4 M(4,0),RESERVED5 M(4,0),RESERVED6 M(4,0),RESERVED7 M(4,0),RESERVED8 M(4,0),USER M(4,0)
1252

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] Class     
[START RESERVED1]
VERSION =   3.00[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _32Y0XN5IE
[CLASS] basecustom
[CLASSLOC] peme_basecontrols.vcx
[BASECLASS] custom
[OBJNAME] pemeditor_main
[START PROPERTIES]
Name = "pemeditor_main"
_memberdata =     1135<VFPData><memberdata name="capplicationpath" display="cApplicationPath"/><memberdata name="oeditorwin" display="oEditorWin"/><memberdata name="addmrufile" display="AddMRUFile"/><memberdata name="extractparameters" display="ExtractParameters"/><memberdata name="extractsnippetparameters" display="ExtractSnippetParameters"/><memberdata name="showhelp" display="ShowHelp"/><memberdata name="transferoldpreferences" display="TransferOldPreferences"/><memberdata name="oprefs" display="oPrefs"/><memberdata name="getmrulist" display="GetMRUList"/><memberdata name="diskfilename" display="DiskFileName"/><memberdata name="getrelativepath" display="GetRelativePath"/><memberdata name="showerrormsg" display="ShowErrorMsg"/><memberdata name="striptabs" display="StripTabs"/><memberdata name="isnamechar" display="IsNameChar"/><memberdata name="getcontrolcount" display="GetControlCount"/><memberdata name="getpemstatus" display="GetPEMStatus"/><memberdata name="editsourcex" display="EditSourceX"/><memberdata name="openurl" display="OpenURL"/><memberdata name="otools" display="oTools"/><memberdata name="outils" display="oUtils"/></VFPData>
capplicationpath = 
lreleaseondestroy = .T.
oeditorwin = .NULL.
oprefs = .NULL.
otools = .NULL.
outils = .NULL.
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
#Include PemEditorVersion.h

Local lcApplicationPath, lcMyPath, lcSnippetPath

With This

	lcMyPath		  = .ClassLibrary
	.cApplicationPath = Addbs (Justpath (Justpath (lcMyPath)))

	.TransferOldPreferences()

	.oPrefs			 = Newobject ('PEME_Preferences', 	'Source\PEME_Preferences.VCX', 		''	;
		  , ccPEMEVERSION)

	.oEditorWin		 = Newobject ('EditorWin', 			'Source\PEME_EditorWin.VCX', 		''	)

	.oUtils			 = Newobject ('PEMEditor_Utils', 	'Source\PEME_Utils.VCX', 			''	;
		  , .cApplicationPath, .oPrefs, .oEditorWin)

	.oTools			 = Newobject ('PEMEditor_Tools', 	'Source\PEME_Tools.VCX', 			''	;
		  , .oUtils, .oEditorWin)

	****************************************************************

Endwith


ENDPROC
PROCEDURE extractparameters
Lparameters lcString, lcDelimiter

Local loResult As 'Collection'
Local lcChar, lcLastChar, lnMatch, lnParenLevel, lnPos, lnStartCurrent

loResult	   = Createobject ('Collection')
lnStartCurrent = 1
lnParenLevel   = 0

For lnPos = 1 To Len (lcString)
	lcChar = Substr (lcString, lnPos, 1)
	Do Case
		Case lcChar = lcDelimiter And lnParenLevel = 0
			loResult.Add (Substr (lcString, lnStartCurrent, lnPos - lnStartCurrent))
			lnStartCurrent = lnPos + 1
		Case lcChar = '('
			lnParenLevel = lnParenLevel + 1
		Case lcChar = ')'
			lnParenLevel = lnParenLevel - 1
		Case lcChar $ ['"]
			lnMatch	= At (lcChar, Substr (lcString, lnPos + 1))
			lnPos	= lnPos + Evl (lnMatch, 10000) && move our pointer
		Case lcChar = '['
			lcLastChar = Right (' ' + Trim (Left (lcString, lnPos - 1)), 1)
			If This.IsNameChar (lcLastChar)
				lnParenLevel = lnParenLevel + 1
			Else
				lnMatch	= At (']', Substr (lcString, lnPos + 1))
				lnPos	= lnPos + Evl (lnMatch, 10000) && move our pointer
			Endif
		Case lcChar = ']'
			lnParenLevel = lnParenLevel - 1
	Endcase
Endfor

loResult.Add (Substr  (lcString, lnStartCurrent))

Return loResult



ENDPROC
PROCEDURE extractsnippetparameters
Lparameters lcParameters, lcDelimiter_Char, lcSnippet_Keyword, lnMin_Parameters, lnMax_Parameters

* do the work
Local lcParams, lnI, loParams

Do Case
	Case 0 = Len (lcDelimiter_Char)
		Return ['] + Strtran (Alltrim (lcParameters), ['], [' + "'" + ']) + [']

	Case Empty (lcParameters)
		If Not Between (0, lnMin_Parameters, lnMax_Parameters)
			Messagebox ('Incorrect number of parameters for ' + lcSnippet_Keyword, 16)
			Return .T. && we tried to handle it, but couldn't; leave Snippet alone
		Endif
		Return ''

	Otherwise
		loParams = This.ExtractParameters (lcParameters, lcDelimiter_Char)
		If Not Between (loParams.Count, lnMin_Parameters, lnMax_Parameters)
			Messagebox ('Incorrect number of parameters for ' + lcSnippet_Keyword, 16)
			Return .T. && we tried to handle it, but couldn't; leave Snippet alone
		Endif

		lcParams = ['] + Strtran (Alltrim (loParams.Item(1)), ['], [' + "'" + ']) + [']
		For lnI = 2 To loParams.Count
			lcParams = lcParams + [, '] + Strtran (Alltrim (loParams.Item (lnI)), ['], [' + "'" + ']) + [']
		Endfor

		Return lcParams
Endcase

ENDPROC
PROCEDURE transferoldpreferences

Local loNewPrefs As 'peme_basepreferences' Of  'Source\Peme_Preferences.VCX'
Local loPrefs As 'peme_basepreferences' Of  'Source\Peme_Preferences.VCX'
Local lcNewName, lcOldName, lnI, lxValue, lcFavorites
Local Array aOptions(1), laFavorites(1)

loPrefs	 = Newobject ('peme_basepreferences', 	'Source\Peme_Preferences.VCX', '')
If loPrefs.OpenResource()
	If 0 # Reccount('FoxResource')
		Locate For Upper(Name) = Upper('Settings')
		If Not Found()
			Use (This.cApplicationPath + '\Tables\OptionNames') In 0 Alias OptionNames
			Select * 						;
				from FoxResource			;
				where (Not Empty(Id)) And Upper(Name) # Upper('EditPMPreferences');
				into Cursor crsr_Resource

			Scan
				loNewPrefs = Newobject ('peme_basepreferences', 	'Source\Peme_Preferences.VCX', '')
				Restore From Memo Data Additive
				lcFavorites = CR
				For lnI = 1 To Alen(aOptions,1)
					lcOldName = aOptions(lnI,1)
					lxValue = aOptions(lnI,2)
					If Indexseek(Upper(lcOldName), .T., 'OptionNames', 'OptionName')
						lcNewName = Alltrim(OptionNames.NewName)
						loNewPrefs.AddProperty(lcNewName, lxValue)
					Endif
					If Upper(lcOldName) = 'FAVORITE' And 'C' = Vartype(lxValue)
						ALines(laFavorites, Lower(lxValue + '||'), .T., '|')
						lcFavorites = lcFavorites + Trim(laFavorites(1)) + IIF(Empty(laFavorites(2)), '', '|' + laFavorites(2)) + CR
					Endif
				Endfor
				loNewPrefs.AddProperty('cFavorites', lcFavorites)
				loNewPrefs.SaveValues(crsr_Resource.Id, 'Settings')
				If crsr_Resource.Id = 'NEWEDITPROPD'
					loNewPrefs.SaveValues('Main', 'Preferences')
				Endif
				loNewPrefs = .Null.
			Endscan
		Endif
	Endif

	*!*		loPrefs.OpenResource()
	*!*		Select FoxResource
	*!*		Delete For Not InList(Name, 'Settings', 'Preferences')
	loPrefs.CloseResource()
Endif


ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
*extractparameters 
*extractsnippetparameters 
*transferoldpreferences 
capplicationpath
oeditorwin
oprefs
otools
outils
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED8]
editpropertydialog.h[END RESERVED8]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] pemeditor_main
[EOF]
